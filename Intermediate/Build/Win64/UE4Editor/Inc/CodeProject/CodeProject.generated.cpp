// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "CodeProject.h"
#include "CodeProject.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1CodeProject() {}
	void ACodeProjectCharacter::StaticRegisterNativesACodeProjectCharacter()
	{
	}
	IMPLEMENT_CLASS(ACodeProjectCharacter, 839400002);
	void ACodeProjectGameMode::StaticRegisterNativesACodeProjectGameMode()
	{
	}
	IMPLEMENT_CLASS(ACodeProjectGameMode, 2280273985);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USpringArmComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGameModeBase();

	CODEPROJECT_API class UClass* Z_Construct_UClass_ACodeProjectCharacter_NoRegister();
	CODEPROJECT_API class UClass* Z_Construct_UClass_ACodeProjectCharacter();
	CODEPROJECT_API class UClass* Z_Construct_UClass_ACodeProjectGameMode_NoRegister();
	CODEPROJECT_API class UClass* Z_Construct_UClass_ACodeProjectGameMode();
	CODEPROJECT_API class UPackage* Z_Construct_UPackage__Script_CodeProject();
	UClass* Z_Construct_UClass_ACodeProjectCharacter_NoRegister()
	{
		return ACodeProjectCharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_ACodeProjectCharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage__Script_CodeProject();
			OuterClass = ACodeProjectCharacter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ManaRegen = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ManaRegen"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ManaRegen, ACodeProjectCharacter), 0x0020080000020015);
				UProperty* NewProp_StaminaRegen = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StaminaRegen"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(StaminaRegen, ACodeProjectCharacter), 0x0020080000020015);
				UProperty* NewProp_HealthRegen = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HealthRegen"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(HealthRegen, ACodeProjectCharacter), 0x0020080000020015);
				UProperty* NewProp_MaxMana = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxMana"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxMana, ACodeProjectCharacter), 0x0020080000020015);
				UProperty* NewProp_CurrentMana = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentMana"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CurrentMana, ACodeProjectCharacter), 0x0020080000020015);
				UProperty* NewProp_MaxStamina = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxStamina"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxStamina, ACodeProjectCharacter), 0x0020080000020015);
				UProperty* NewProp_CurrentStamina = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentStamina"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CurrentStamina, ACodeProjectCharacter), 0x0020080000020015);
				UProperty* NewProp_MaxHealth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxHealth"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxHealth, ACodeProjectCharacter), 0x0020080000020015);
				UProperty* NewProp_CurrentHealth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentHealth"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CurrentHealth, ACodeProjectCharacter), 0x0020080000020015);
				UProperty* NewProp_MaxCameraDistance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxCameraDistance"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxCameraDistance, ACodeProjectCharacter), 0x0020080000020001);
				UProperty* NewProp_CameraMaxAdjustRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CameraMaxAdjustRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CameraMaxAdjustRate, ACodeProjectCharacter), 0x0010000000020015);
				UProperty* NewProp_CameraDistance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CameraDistance"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CameraDistance, ACodeProjectCharacter), 0x0010000000020015);
				UProperty* NewProp_BaseLookUpRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseLookUpRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseLookUpRate, ACodeProjectCharacter), 0x0010000000020015);
				UProperty* NewProp_BaseTurnRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseTurnRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseTurnRate, ACodeProjectCharacter), 0x0010000000020015);
				UProperty* NewProp_FollowCamera = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FollowCamera"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(FollowCamera, ACodeProjectCharacter), 0x00400000000a001d, Z_Construct_UClass_UCameraComponent_NoRegister());
				UProperty* NewProp_CameraBoom = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CameraBoom"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CameraBoom, ACodeProjectCharacter), 0x00400000000a001d, Z_Construct_UClass_USpringArmComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CodeProjectCharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("CodeProjectCharacter.h"));
				MetaData->SetValue(NewProp_ManaRegen, TEXT("Category"), TEXT("Attribute"));
				MetaData->SetValue(NewProp_ManaRegen, TEXT("ModuleRelativePath"), TEXT("CodeProjectCharacter.h"));
				MetaData->SetValue(NewProp_ManaRegen, TEXT("ToolTip"), TEXT("Mana regen of the character"));
				MetaData->SetValue(NewProp_StaminaRegen, TEXT("Category"), TEXT("Attribute"));
				MetaData->SetValue(NewProp_StaminaRegen, TEXT("ModuleRelativePath"), TEXT("CodeProjectCharacter.h"));
				MetaData->SetValue(NewProp_StaminaRegen, TEXT("ToolTip"), TEXT("Stamina regen of the character"));
				MetaData->SetValue(NewProp_HealthRegen, TEXT("Category"), TEXT("Attribute"));
				MetaData->SetValue(NewProp_HealthRegen, TEXT("ModuleRelativePath"), TEXT("CodeProjectCharacter.h"));
				MetaData->SetValue(NewProp_HealthRegen, TEXT("ToolTip"), TEXT("Health regen of the character"));
				MetaData->SetValue(NewProp_MaxMana, TEXT("Category"), TEXT("Attribute"));
				MetaData->SetValue(NewProp_MaxMana, TEXT("ModuleRelativePath"), TEXT("CodeProjectCharacter.h"));
				MetaData->SetValue(NewProp_MaxMana, TEXT("ToolTip"), TEXT("Max mana of the character"));
				MetaData->SetValue(NewProp_CurrentMana, TEXT("Category"), TEXT("Attribute"));
				MetaData->SetValue(NewProp_CurrentMana, TEXT("ModuleRelativePath"), TEXT("CodeProjectCharacter.h"));
				MetaData->SetValue(NewProp_CurrentMana, TEXT("ToolTip"), TEXT("Current mana of the character"));
				MetaData->SetValue(NewProp_MaxStamina, TEXT("Category"), TEXT("Attribute"));
				MetaData->SetValue(NewProp_MaxStamina, TEXT("ModuleRelativePath"), TEXT("CodeProjectCharacter.h"));
				MetaData->SetValue(NewProp_MaxStamina, TEXT("ToolTip"), TEXT("Max stamina of the character"));
				MetaData->SetValue(NewProp_CurrentStamina, TEXT("Category"), TEXT("Attribute"));
				MetaData->SetValue(NewProp_CurrentStamina, TEXT("ModuleRelativePath"), TEXT("CodeProjectCharacter.h"));
				MetaData->SetValue(NewProp_CurrentStamina, TEXT("ToolTip"), TEXT("Current stamina of the character"));
				MetaData->SetValue(NewProp_MaxHealth, TEXT("Category"), TEXT("Attribute"));
				MetaData->SetValue(NewProp_MaxHealth, TEXT("ModuleRelativePath"), TEXT("CodeProjectCharacter.h"));
				MetaData->SetValue(NewProp_MaxHealth, TEXT("ToolTip"), TEXT("Max health of the character"));
				MetaData->SetValue(NewProp_CurrentHealth, TEXT("Category"), TEXT("Attribute"));
				MetaData->SetValue(NewProp_CurrentHealth, TEXT("ModuleRelativePath"), TEXT("CodeProjectCharacter.h"));
				MetaData->SetValue(NewProp_CurrentHealth, TEXT("ToolTip"), TEXT("Current health of the character"));
				MetaData->SetValue(NewProp_MaxCameraDistance, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_MaxCameraDistance, TEXT("ModuleRelativePath"), TEXT("CodeProjectCharacter.h"));
				MetaData->SetValue(NewProp_CameraMaxAdjustRate, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_CameraMaxAdjustRate, TEXT("ModuleRelativePath"), TEXT("CodeProjectCharacter.h"));
				MetaData->SetValue(NewProp_CameraMaxAdjustRate, TEXT("ToolTip"), TEXT("The max rate of which the camera can readjustment itself"));
				MetaData->SetValue(NewProp_CameraDistance, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_CameraDistance, TEXT("ModuleRelativePath"), TEXT("CodeProjectCharacter.h"));
				MetaData->SetValue(NewProp_CameraDistance, TEXT("ToolTip"), TEXT("The default camera distance"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("ModuleRelativePath"), TEXT("CodeProjectCharacter.h"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("ToolTip"), TEXT("Base look up/down rate, in deg/sec. Other scaling may affect final rate."));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ModuleRelativePath"), TEXT("CodeProjectCharacter.h"));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ToolTip"), TEXT("Base turn rate, in deg/sec. Other scaling may affect final turn rate."));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("ModuleRelativePath"), TEXT("CodeProjectCharacter.h"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("ToolTip"), TEXT("Follow camera"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("ModuleRelativePath"), TEXT("CodeProjectCharacter.h"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("ToolTip"), TEXT("Camera boom positioning the camera behind the character"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ACodeProjectCharacter(Z_Construct_UClass_ACodeProjectCharacter, &ACodeProjectCharacter::StaticClass, TEXT("ACodeProjectCharacter"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ACodeProjectCharacter);
	UClass* Z_Construct_UClass_ACodeProjectGameMode_NoRegister()
	{
		return ACodeProjectGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_ACodeProjectGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameModeBase();
			Z_Construct_UPackage__Script_CodeProject();
			OuterClass = ACodeProjectGameMode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880288;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Info Rendering MovementReplication Replication Actor Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CodeProjectGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("CodeProjectGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ACodeProjectGameMode(Z_Construct_UClass_ACodeProjectGameMode, &ACodeProjectGameMode::StaticClass, TEXT("ACodeProjectGameMode"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ACodeProjectGameMode);
	UPackage* Z_Construct_UPackage__Script_CodeProject()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/CodeProject")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0xD6708FF9;
			Guid.B = 0x4B4AF6B2;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
